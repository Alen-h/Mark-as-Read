// Mark as Read - Minimal Flat Mixins
// Clean, flat design components

// === Card style mixins ===
@mixin card-flat {
  background: $bg-white;
  border-radius: $border-radius-lg;
  border: $border-width solid $border-color;
  // Remove complex shadows, use simple borders
}

@mixin card-minimal {
  background: $bg-gray-light;
  border-radius: $border-radius-md;
  border: $border-width solid $border-color-light;
}

// === Button style mixins ===
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-md;
  border: $border-width solid transparent;
  border-radius: $border-radius-md;
  font-family: $font-family-base;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  cursor: pointer;
  transition: all $transition-base;
  text-decoration: none;
  
  &:focus {
    outline: 2px solid $theme-accent;
    outline-offset: 2px;
  }
  
  &:disabled {
    opacity: $opacity-disabled;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background: $bg-success;
  color: white;
  border-color: $bg-success;
  
  &:hover:not(:disabled) {
    background: $theme-success-dark;
    border-color: $theme-success-dark;
  }
  
  &:active {
    background: $theme-success-dark;
  }
}

@mixin button-secondary {
  @include button-base;
  background: $bg-white;
  color: $theme-primary;
  border-color: $border-color;
  
  &:hover:not(:disabled) {
    background: $bg-gray-light;
    border-color: $border-color-dark;
  }
}

@mixin button-danger {
  @include button-base;
  background: $bg-error;
  color: white;
  border-color: $bg-error;
  
  &:hover:not(:disabled) {
    background: $theme-error-dark;
    border-color: $theme-error-dark;
  }
}

@mixin button-ghost {
  @include button-base;
  background: transparent;
  color: $theme-primary;
  border-color: $theme-primary;
  
  &:hover:not(:disabled) {
    background: $theme-primary;
    color: white;
  }
}

// === Input style mixins ===
@mixin input-flat {
  width: 100%;
  padding: $spacing-sm $spacing-md;
  border: $border-width solid $border-color;
  border-radius: $border-radius-md;
  font-family: $font-family-base;
  font-size: $font-size-sm;
  background: $bg-white;
  transition: border-color $transition-base;
  
  &:focus {
    outline: none;
    border-color: $theme-accent;
  }
  
  &::placeholder {
    color: $gray-400;
  }
}

// === Container style mixins ===
@mixin container-flat {
  background: $bg-white;
  border: $border-width solid $border-color;
  border-radius: $border-radius-lg;
}

@mixin container-primary {
  background: $bg-primary;
  color: white;
  border-radius: $border-radius-lg;
}

@mixin container-accent {
  background: $bg-accent;
  color: white;
  border-radius: $border-radius-lg;
}

// === State style mixins ===
@mixin state-success {
  background: $theme-success-light;
  color: $theme-success-dark;
  border: $border-width solid $theme-success;
}

@mixin state-error {
  background: $theme-error-light;
  color: $theme-error-dark;
  border: $border-width solid $theme-error;
}

@mixin state-warning {
  background: $warning-100;
  color: $warning-700;
  border: $border-width solid $warning-500;
}

// === Hover effects mixins ===
@mixin hover-lift-minimal {
  transition: transform $transition-base;
  
  &:hover {
    transform: translateY(-1px);
  }
}

@mixin hover-bg-change($bg-color: $bg-gray-light) {
  transition: background-color $transition-base;
  
  &:hover {
    background-color: $bg-color;
  }
}

// === Text style mixins ===
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// === Layout mixins ===
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

// === Responsive breakpoint mixins ===
@mixin mobile {
  @media (max-width: $breakpoint-mobile) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: $breakpoint-tablet) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: $breakpoint-desktop) {
    @content;
  }
}

// === Animation mixins ===
@mixin fade-in {
  opacity: 0;
  animation: fadeIn $transition-base ease-out;
  
  @keyframes fadeIn {
    to {
      opacity: 1;
    }
  }
}

@mixin slide-up {
  transform: translateY(20px);
  opacity: 0;
  animation: slideUp $transition-base ease-out;
  
  @keyframes slideUp {
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
}

// === Simple slide-in animation ===
@mixin slide-in {
  transform: translateX(100%);
  opacity: 0;
  animation: slideIn $transition-slow ease-out;
  
  @keyframes slideIn {
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
} 